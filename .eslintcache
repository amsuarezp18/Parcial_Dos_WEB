[{"/home/hp/Escritorio/parcial2/src/index.js":"1","/home/hp/Escritorio/parcial2/src/reportWebVitals.js":"2","/home/hp/Escritorio/parcial2/src/App.js":"3","/home/hp/Escritorio/parcial2/src/serviceWorkerRegistration.js":"4","/home/hp/Escritorio/parcial2/src/components/Pokemon.js":"5","/home/hp/Escritorio/parcial2/src/components/PokemonGraphic.js":"6","/home/hp/Escritorio/parcial2/src/components/PokemonList.js":"7"},{"size":1194,"mtime":1607125382633,"results":"8","hashOfConfig":"9"},{"size":364,"mtime":1607099803180,"results":"10","hashOfConfig":"9"},{"size":402,"mtime":1607121624388,"results":"11","hashOfConfig":"9"},{"size":5064,"mtime":1607099803180,"results":"12","hashOfConfig":"9"},{"size":3645,"mtime":1607123644796,"results":"13","hashOfConfig":"9"},{"size":1864,"mtime":1607124580408,"results":"14","hashOfConfig":"9"},{"size":657,"mtime":1607124920336,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"162wrp8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},"/home/hp/Escritorio/parcial2/src/index.js",[],"/home/hp/Escritorio/parcial2/src/reportWebVitals.js",[],["34","35"],"/home/hp/Escritorio/parcial2/src/App.js",["36"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Pokemon from \"./components/Pokemon\"\n\nfunction App(props) {\n  return (\n      <Router>\n      <Switch>\n        <Route path=\"/\">\n         <Pokemon lang = {props.lang} /> \n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/hp/Escritorio/parcial2/src/serviceWorkerRegistration.js",[],"/home/hp/Escritorio/parcial2/src/components/Pokemon.js",["37","38"],"import React, { useState, useEffect } from \"react\";\nimport \"./Pokemon.css\";\nimport { FormattedMessage } from \"react-intl\";\nimport PokemonGraphic from \"./PokemonGraphic\";\nimport PokemonList from \"./PokemonList\";\n\nexport default function Pokemon(props) {\n  const [locale, setLocale] = useState(props.lang);\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if (!navigator.onLine) {\n      if (localStorage.getItem(\"pokemon\") === \"\") {\n        setMessages(\"Loading...\");\n      } else {\n        setMessages(JSON.parse(localStorage.getItem(\"pokemon\")));\n      }\n    } else {\n      fetchData();\n    }\n  }, []);\n\n  const fetchData = async () => {\n    let url = \"\";\n    if (locale === \"en\") {\n      url =\n        \"https://gist.githubusercontent.com/jhonatan89/2089276d3ce0faceff8e55fc3459b818/raw/30ee1a77b3e328108faaaa9aaac6f2ddaa3d3711/pokemons-en.json\";\n    } else {\n      url =\n        \"https://gist.githubusercontent.com/jhonatan89/e379fadf8ed0f5381a2d8f8f3dea90c3/raw/e2bc20df02828d297f99558551e37959ac97a6f8/pokemon-es.json\";\n    }\n    const resp = await fetch(url);\n    const data = await resp.json();\n\n    setMessages(data);\n    localStorage.setItem(\"pokemon\", JSON.stringify(data));\n  };\n\n  return (\n    <main>\n      <section className=\"container-pokemon-table max-w__table\">\n        <div className=\"bd-grid__table\">\n          <table className=\"table table-striped\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">\n                  <FormattedMessage\n                    id=\"table.image\"\n                    defaultMessage=\"Image\"\n                    description=\"src of image\"\n                    values={{ what: \"react-intl\" }}\n                  />\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage\n                    id=\"table.name\"\n                    defaultMessage=\"Name\"\n                    description=\"name of pokemon\"\n                    values={{ what: \"react-intl\" }}\n                  />\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage\n                    id=\"table.description\"\n                    defaultMessage=\"Description\"\n                    description=\"description of pokemon\"\n                    values={{ what: \"react-intl\" }}\n                  />\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage\n                    id=\"table.height\"\n                    defaultMessage=\"Height\"\n                    description=\"height of pokemon\"\n                    values={{ what: \"react-intl\" }}\n                  />\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage\n                    id=\"table.weight\"\n                    defaultMessage=\"Weight\"\n                    description=\"weight of pokemon\"\n                    values={{ what: \"react-intl\" }}\n                  />\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage\n                    id=\"table.type\"\n                    defaultMessage=\"Type\"\n                    description=\"type of pokemon\"\n                    values={{ what: \"react-intl\" }}\n                  />\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n                {messages.map((po) => {\n                return <PokemonList pokemon={po} key={po.id} />;\n              })} \n            </tbody>\n          </table>\n        </div>\n      </section>\n      <section>\n      <PokemonGraphic\n         pokemons={messages} \n         />\n      </section>\n    </main>\n  );\n}\n","/home/hp/Escritorio/parcial2/src/components/PokemonGraphic.js",[],"/home/hp/Escritorio/parcial2/src/components/PokemonList.js",["39"],"import React, {useState} from \"react\";\n\nexport default function PokemonList(props) {\n\n  return (\n    <tr>\n      <th scope=\"row\">{props.pokemon.id}</th>\n      <td>\n        <img\n          className=\"card-img-pokemon\"\n          src={props.pokemon.ThumbnailImage}\n          alt={props.pokemon.name}\n        />\n      </td>\n      <td>{props.pokemon.name}</td>\n      <td>{props.pokemon.description}</td>\n      <td>{props.pokemon.height}</td>\n      <td>{props.pokemon.weight}</td>\n      <td>\n      {props.pokemon.type.map((po) => {\n          return (\n            <span class=\"badge badge-secondary\">{po}</span>\n          ); \n      })} \n      </td>\n    </tr>\n  );\n}\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":8,"column":18,"nodeType":"46","messageId":"47","endLine":8,"endColumn":27},{"ruleId":"49","severity":1,"message":"50","line":21,"column":6,"nodeType":"51","endLine":21,"endColumn":8,"suggestions":"52"},{"ruleId":"44","severity":1,"message":"53","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":24},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setLocale' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["56"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [fetchData]",{"range":"59","text":"60"},[622,624],"[fetchData]"]